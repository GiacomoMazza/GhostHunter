// Fill out your copyright notice in the Description page of Project Settings.


#include "MyGameManager.h"

#include "TimerManager.h"

#include "GhostHunterCharacter.h"

#include "GameFramework/CharacterMovementComponent.h"

#include "GameFramework/Character.h"

// Sets default values
AMyGameManager::AMyGameManager()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;

}

// Called when the game starts or when spawned
void AMyGameManager::BeginPlay()
{
	Super::BeginPlay();

	//UCharacterMovementComponent* CharMovement = MyPlayer->FindComponentByClass<UCharacterMovementComponent>();

	GetWorldTimerManager().SetTimer(JumpTimeHandler, this, &AMyGameManager::EnableJump, fl_CharWaitJump, true, 3.0f);
	//GetWorldTimerManager().SetTimer(JumpTimeHandler, this, &AMyGameManager::DisableJump, 4.0f, true, 3.0f);
	////AGhostHunterCharacter *MyPlayer;
	//
	//if (MyPlayer)
	//{
	//	UCharacterMovementComponent* CharMovement = MyPlayer->FindComponentByClass<UCharacterMovementComponent>();
	//	if (MyPlayer)
	//	{
	//		CharMovement->SetJumpAllowed(true);
	//	}
	//}
	//bl_CanCharJump = true;
	//CharMovement->JumpZVelocity = 0;
	//CharMovement->CanEverJump == false;
}

//void AMyGameManager::DisableJump() {
//	bl_CanCharJump = false;
//	UCharacterMovementComponent* CharMovement = MyPlayer->FindComponentByClass<UCharacterMovementComponent>();
//	CharMovement->JumpZVelocity = 0;
//}

void AMyGameManager::EnableJump() {

	//UCharacterMovementComponent* CharMovement = MyPlayer->FindComponentByClass<UCharacterMovementComponent>();
	
	bl_CanCharJump = true;
	//CharMovement->JumpZVelocity = 600;

	//if (bl_CanCharJump) {
		//if (CharMovement->CanEverJump == true) {
			//If player presses button...
			//MyPlayer->Jump();
			//CharMovement->CanEverJump == false;
		//}
	//}

	//CharMovement->JumpZVelocity = 0;
	//MyPlayer->GetCharacterMovement()->MaxWalkSpeed = 0;

	//UInputComponent* Input = MyPlayer->FindComponentByClass<UInputComponent>();
	//
	//InputComponent->BindAction()
	//if (MyPlayer)
	//{		
	//	if (CharMovement)
	//	{
	//		CharMovement->SetJumpAllowed(true);
	//	}
	//}

	/*MyPlayer->Jump();*/

	//if (MyPlayer)
	//{
	//	if (CharMovement) 
	//	{
	//		CharMovement->SetJumpAllowed(false);
	//	}
	//}

	//if (MyPlayer) {
	//	if (CharMovement) {
	//		if (bl_CanCharJump) {
	//			MyPlayer->Jump();
	//		}
	//	}
	//}
}

// Called every frame
void AMyGameManager::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

	UCharacterMovementComponent* CharMovement = MyPlayer->FindComponentByClass<UCharacterMovementComponent>();
	
	if (CharMovement != nullptr)
	{
		if (!CharMovement->IsFalling()) {

			if (!bl_CanCharJump)
			{
				CharMovement->JumpZVelocity = 0.0f;
			}

			else if (bl_CanCharJump) {
				CharMovement->JumpZVelocity = 600;
			}
		}

		else if (CharMovement->IsFalling()) {
			bl_CanCharJump = false;
		}
	}
}

